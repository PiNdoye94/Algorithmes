EXERCICE1:
Algorithme Division
VAR a, b, q_entier,q_réel, reste : entiers

DEBUT_ALGORITHME

   Afficher("Entrer les valeurs de a et de b : ")
   LIRE(a)
   LIRE(b)
   q_entier <--- floor(a/b)
     Afficher("le quotient eniter de la division est: ", q_entirer)
   q_réel <--- a/b
     Afficher("le quotient réel de la division est: ", q_réel)
   r <--- a%b
     Afficher("le reste de la division est: ", reste)
  
FIN_ALGORITHME

EXERCICE2:
Algorithme Cercle
VAR r, s, p : réels

DEBUT_ALGORITHME

   Afficher("Entrer le rayon du cercle: ")
   LIRE(r)
   s <--- r*r*4*atan(1)
     Afficher("la surface du cercle est: ", s,"m2")
   p <--- r*2*4*atan(1)
     Afficher("le périmètre du cercle est: ", p,"m")
  
FIN_ALGORITHME

EXERCICE3:
Algorithme Résistances_Circuit
Version1:
VAR  R1, R2, R3, RT: réels

DEBUT_ALGORITHME

   Afficher("Saisir la valeur des résistances R1, R2 et R3: ")
   LIRE(R1)
   LIRE(R2)
   LIRE(R3)
   RT <--- R1+R2+R3
     Afficher("la résistance totale du circuit en série est: ", RT,"ohm")
   RT <--- (R1+R2+R3+)/(R1*R2+R2*R3+R1*R3)
     Afficher("la résistance totale du circuit en parallèle est: ", RT,"ohm")

FIN_ALGORITHME

Version2:
VAR R1, R2, R3, RT: réels
             choix: entier
			 
DEBUT_ALGORITHME

   Afficher("Saisir la valeur des résistances R1, R2 et R3: ")
   LIRE(R1)
   LIRE(R2)
   LIRE(R3)
   Si(choix==1) alors
      RT <--- R1+R2+R3
         Afficher("la résistance totale du circuit en série est: ", RT,"ohm")
   Sinon Si(choix==2) alors		 
      RT <--- (R1+R2+R3+)/(R1*R2+R2*R3+R1*R3)
         Afficher("la résistance totale du circuit en parallèle est: ", RT,"ohm")
         Sinon(Choix impossible!!)	
         FinSi
   FinSi		 

FIN_ALGORITHME

EXERCICE4:
Algorithme Calcul_Puissance
Version1:
VAR x, P: entiers
    n : réels

DEBUT_ALGORITHME

   Afficher("Entrer les valeurs de x et de n : ")
   LIRE(x)
   LIRE(n)
   P <--- pow(x;n)
     Afficher("le résultat de x à la puissance n est: ", P)
	 
FIN_ALGORITHME
	 
Version2:	 
 VAR x, P, i: entiers
    n : réels

DEBUT_ALGORITHME
    Afficher("Entrer les valeurs de x et de n : ")
    LIRE(x)
    LIRE(n)
    P <--- 1 
    Pour i allant de 1 à n
       P <--- P*x
	FinPour   
	   Afficher("le résultat de x à la puissance n est: ", P)

FIN_ALGORITHME

EXERCICE5:
Algorithme Calcul_Somme
VAR somme, N, i : entiers

DEBUT_ALGORITHME

   somme <--- 0
   Pour i allant de 1 à 5 alors
      Afficher("Entrer les valeurs de N : ")
      LIRE(N)
	  somme <--- somme+N
   FinPour
     Afficher("la somme des N valeurs est: ", somme)
  
FIN_ALGORITHME

EXERCICE6:
Algorithme Distance_AB
VAR x1, x2, y1, y2, D: réels

DEBUT_ALGORITHME
    Afficher("Entrer les coordonnées du point A(x1,y1): ")
	Lire(x1)
	Lire(y1)
	Afficher("Entrer les coordonnéesdu point B(x2,y2): ")
	Lire(x2)
	Lire(y2)
	D <--- sqrt(sqr(x1-x2)+sqr(y1-y2))
	Afficher("La distance entre les point A et B est de: ",D,"m")
   
FIN_ALGORITHME

EXERCICE7:
Algorithme 
VAR montant,reste,B20,B10,B,5P,2P1: entiers

DEBUT_ALGORITHME
    Afficher("Entrer le montant souhaité: ")
	Lire(montant)
	billet20 < -- montant/20
	reste <-- montant%20
	B10 <-- reste/10
	reste <-- reste%10
	B5 <-- reste/5
	reste <-- reste%5
	P2 <-- reste/2
	reste <-- reste%2
	P1 <-- reste/1
	reste <-- reste%1
	Afficher("la décomposition du montant saisi en billet de 20euro,10euro,5euro et 
	         en pièces de 2euro,1euro est respectivement: ",B20, B10 , B5 , P2 , P1)
	  
FIN_ALGORITHME

EXERCICE8:
Algorithme Equation_2nd_Degré
VAR a,b,c, D: réels

DEBUT_ALGORITHME
   Afficher("Entrer les coefficients de l'équation: ")
   Lire(a)
   Lire(b)
   Lire(c)
   Si(a==0 && b==0) alors 
      Afficher("l'équation n'a pas de solution!")
   Sinon Si (b!=0) alors
         Afficher("la solution de l'équation est x= ",-c/b)
		 FinSi
   FinSi
   D <-- (b*b) - (4*a*c)
     Si D==0 alors 
       Afficher("l'équation admet une unqiue solution x0=: ",-b/(2*a))
     Sinon
       Afficher("l'équation admet deux solutions x1= ",(-b-sqrt(D))/(2*a)," et x2= ",(-b+sqrt(D))/(2*a))	
     FinSi	   
FIN_ALGORITHME

EXERCICE9:
VersionA:
Algorithme Durée_Vol
VAR Heure_D, HEURE_A, Min_D, Min_A, Min_Vol, Heure_Vol: entiers

DEBUT_ALGORITHME
    Afficher("Entrer l'heure de départ: ")
	Lire(Heure_D)
	Lire(Min_D)
	Afficher("l'heure de départ est: ",Heure_D,"h",Min_D,"mins")
	Afficher("Entrer l'heure d'arrivée: ")
	Lire(HEURE_A)
	Lire(Min_A)
	Afficher("l'heure d'arrivée est: ",HEURE_A,"h",Min_A,"mins")
	Si(Min_A>Min_D) alors
	  Min_Vol < -- Min_A - Min_D
	  Heure_Vol <-- Heure_D - HEURE_A
	  Afficher("la durée de la vol est de: ",Heure_Vol,"h",Min_Vol,"mins")
	Sinon 
      Min_Vol <-- Min_A+60-Min_D
      Heure_Vol <-- Heure_D - HEURE_A
      Afficher("la durée de la vol est de: ",Heure_Vol,"h",Min_Vol,"mins")	  

FIN_ALGORITHME

VersionB:
Algorithme Durée_Vol
VAR Heure_D, HEURE_A, Min_D, Min_A, Min_Vol, Heure_Vol: entiers

DEBUT_ALGORITHME
    Afficher("Entrer l'heure de départ: ")
	Lire(Heure_D)
	Lire(Min_D)
	Afficher("l'heure de départ est: ",Heure_D,"h",Min_D,"mins")
	Afficher("Entrer l'heure d'arrivée: ")
	Lire(HEURE_A)
	Lire(Min_A)
	Afficher("l'heure d'arrivée est: ",HEURE_A,"h",Min_A,"mins")
	Si(Min_A>Min_D) alors
	  Min_Vol < -- Min_A - Min_D
	  Heure_Vol <-- 24 - Heure_D + HEURE_A
	  Afficher("la durée de la vol est de: ",Heure_Vol,"h",Min_Vol,"mins")
	Sinon 
      Min_Vol <-- Min_A+60-Min_D
      Heure_Vol <-- 24 - Heure_D + HEURE_A
      Afficher("la durée de la vol est de: ",Heure_Vol,"h",Min_Vol,"mins")	  

FIN_ALGORITHME

EXERCICE10:
Algorithme Tri_Successif
VAR A,B,C : entiers

DEBUT_ALGORITHME
    Afficher("Entrer les valeurs de A,B et C: ")
	Lire(A)
	Lire(B)
	Lire(C)
	Si(A>B && A>C) alors
	   Si(B>C) alors 
	      Afficher("l'ordre croissant est: ",C, B, A)
	   Sinon
          Afficher("l'ordre croissant est: ",B, C, A)
       FinSi		  
    Sinon Si(B>A && B>C) alors
             Si(A>C) alors
                Afficher("l'ordre croissant est: ",C, A, B)	
             Sinon 
                Afficher("l'ordre croissant est: ",A, C, B)
             FinSi				
          Sinon Si(C>A && C>B) alors 
                    Si(A>B) alors
                       Afficher("l'ordre croissant est: ",B, A, C)	
                    Sinon 
                       Afficher("l'ordre croissant est: ",A, B, C)
					FinSi   
				FinSi	   
       	  FinSi 				   
    FinSi

FIN_ALGORITHME

EXERCICE11:
Algorithme Calculatrice
VAR a, b : entiers
   opera : char

DEBUT_ALGORITHME
     Afficher("saisir la valeur de a: ")
	 Lire(a)
	 Afficher("saisir l'opérateur de calcul: ")
	 Lire(opera)
	 Afficher("saisir la valeur de b: ")
	 Lire(b)
	 Si opera=="+" alors
	    Afficher("la somme de a+b est de: ",a+b)
	 Sinon Si opera=="-" alors
              Afficher("la différence de a et b est de: ", a-b)
           Sinon Si opera=="*" alors 
                    Afficher("le produit de a et b est de: ", a*b)
                 Sinon Si opera=="/" alors
                          Si b!=0 alors 
                             Afficher("la division de a et b est de: ", a/b)
                          Sinon 
                             Afficher("opération impossible!!")						  
                          FinSi
					   FinSi
                 FinSi
           FinSi
     FinSi		   

FIN_ALGORITHME

EXERCICE12:
Algorithme Nombre_Parfait
VAR n, i, somme = entiers

DEBUT_ALGORITHME
    Afficher("entrer la valeur de n: ")
	Si n==0 alors
	    Afficher("la nombre",n,"n'est pas parfait!")
	Sinon 
      somme <-- 0 
      Pour i allant de 2 à n div 2+1 faire
        Si n%i==0 alors
            somme <-- somme+i
        FinSi
      FinPour
    Si n==somme alors
       Afficher("le nombre",n,"est parfait")
    Sinon
       Afficher("le nombre",n,"n'est pas parfait")	
    FinSi
FIN_ALGORITHME

EXERCICE13:
Algorithme Date
VAR jour, mois, annee : entiers

DEBUT_ALGORITHME
    Afficher("Entrer une date au format JJ/MM/AA")
    Afficher("Ajouter le jour: ")
	Lire(jour)
	Afficher("Ajouter le mois: ")
	Lire(mois)
	Afficher("Ajouter l'année: ")
	Lire(annee)
	Si (0<jour<=31 && 0<mois<=12 && annee>=2020) alors
	    Afficher("la date ",jour,"/",mois,"/",année," est valide")
	Sinon
        Afficher("la date est invalide!!")	
FIN_ALGORITHME

EXERCICE14:
Algorithme Année_Bissextile
VAR jour, mois, annee : entiers

DEBUT_ALGORITHME

  	Afficher("entrer la date au format jj/mm/AA: ")
  	Lire(jour)
	Lire(mois)
	Lire(annee)
	Afficher(jour,"/",mois,"/",annee)
   	Si (annee%4==0 && annee%100!=0 || annee%400==0)
	    Afficher("L'année est bissextile.")
    Sinon
	    Afficher("L'année n'est pas bissextile!")
    FinSi

FIN_ALGORITHME

EXERCICE15: 
Algorithme Somme_Moyenne
VAR i, somme, n : entiers
        moyenne : réel
			
DEBUT_ALGORITHME

    somme <--- 0
    Pour i allant de 1 à n+1 faire
      	somme <--- Somme+i
        moyenne <--- Somme/n
    FinPour
    Afficher("la somme des valeurs est: ",somme)
  	Afficher("la moyenne de ces valeurs est: ",moyenne)
	  
Fin_ALGORITHME

EXERCICE16:
ALGORITHME Division_par_soustraction_successive
VAR a, b, quotient :entiers

DEBUT_ALGORITHME
    Afficher("saisir une valeur a: ")
	Lire(a)
	Afficher("saisir une valeur b: ")
	Lire(b)
    quotient <--- 0
    Tantque  a>=b faire
      	a <---  a-b
	    quotient <--- quotient+1
    FinTantque
    Afficher ("la division  par soustraction successives est: ",quotient)

FIN_ALGORITHME

EXERCICE17:
Algorithme PGCD
VAR a,b :entiers

DEBUT_ALGORITHME

    Afficher("Entrer une valeur de a : ")
    Lire(a)
    Afficher("Entrer une valeur de b : ")
    Lire(b)
    Tant que (a != b) faire
        Si (a>b) alors
            a ← a-b
        Sinon 
            b ← b-a
        FinSi
    FinTant que
    Afficher("le pgcd est : ", a)
	
FIN_ALGORITHME

EXERCICE18:
Alogrithme PPCM
VAR a, b,produit,  ppcm :eniers

DEBUT_ALGORITHME

    Afficher("Entrer la valeur de a : ")
    Lire(a)
    Afficher("Entrer la valeur de b : ")
    Lire(b)
    produit ←a*b
    Tant que (a != b) faire
        Si (a>b) alors
            a ←- a-b
        Sinon 
            b ← b-a
        FinSi
    FinTant que
    ppcm ← produit/a
    Afficher("le ppcm de a et b est : ", ppcm)
	
FIN_ALGORITHME

EXERCICE19:
Algorithme Somme_prix_articles
VAR prix, somme : entiers

DEBUT_ALGORITHME

        Afficher("Entrer les prix des articles : ")
        Lire(prix)
        somme <--- 0
        Tant que  (prix!=0) faire
            somme <--- somme+prix
	        Afficher("Entrer un autre prix : ")
            Lire(prix)
        FinTant que
        Afficher("la somme des articles est : ",somme)
		  
FIN_ALGORITHME

EXERCICE20:
Algorithme Nombre_Plus_Grand
VAR i, n, m : entiers

DEBUT_ALGORITHME
    m <-- 0
	Pour i allant de 1 à 10 faire
	    Afficher("saisir vos valeurs au choix pour afficher le +grand: ")
		Lire(n)
		Si n>m alors
		   m <-- n
		FinSi
	FinPour	
	Afficher("la valeur la plus grande est: ", m)	

FIN_ALGORITHME

EXERCICE21:
Algorithme Jeu_Dévinette
VAR ValDuJou1, DevDuJou2 : entiers

DEBUT_ALGORITHME
    Afficher("joueur1,saisi une valeur que le joueur2 va déviner: ")
	Lire(ValDuJou1)
	ValDuJou1 <-- 0 
	Tant_que (ValDuJou1 != DevDuJou2) faire
	    Si (ValDuJou1 < DevDuJou2) alors
		   Afficher("valeur dévinée trop grand!")
		   Lire(DevDuJou2)
		Sinon Si (ValDuJou1 > DevDuJou2) alors
                 Afficher("valeur dévinée trop petit!")
				 Lire(DevDuJou2)
              FinSi	
        FinSi	
	FinTant_que	
    Afficher("Félicitation!! Vous avez déviné. ", ValDuJou1)		
FIN_ALGORITHME

EXERCICE22:
Algorithme
VAR

DEBUT_ALGORITHME
     svg<-----0
	 POUR i <----- 1 a 15 
		si(Tableau[i+1] != nil)
			SI(Tableau[i] < Tableau[i+1])
				cpt <----- cpt +1
				last <----- Tableau[i+1]
				pos<-----i+1
			SINON
				SI(svg < cpt)
					svg<-----cpt
					svg2<-----last
					posi<-----pos
				FINSI
				pos<-----0
				cpt<-----0
				last<-----0
			FINSI
		FINSI
	 FINPOUR
	Afficher("Longeur est de la suite successive : ",svg)
	Afficher("Le dernier nombre est : ",svg2," , Il est a la position : ",posi)
	Afficher("Tableau de la suite Successive ")
	POUR j <----- (posi-svg) a posi
		Afficher(Tableau[j]," * ")

FIN_ALGORITHME

EXERCICE23:
Alogrithme Calcul_Nombre_Lapins
VAR F0, F1, FX, i; nbre_mois : entiers
  
DEBUT_ALGORITHME
    F0 <-- 2
    F1 <-- 2
    Pour i allant de 1 à 11 faire
        FX <-- F0 + F1
        F0 <-- F1
        F1 <-- FX  
    FinPour		
    Afficher("Le nombre de lapin au 12ème mois est : ", FX)
    F0 <-- 2
    F1 <-- 2
    nbre_mois <-- 0
    FX <-- 0
    Tant_que (FX < 1000000000) faire
       FX <-- F0 + F1
       F0 <-- F1
       F1 <-- FX
    nbre_mois <-- nbre_mois+1
    FinTant_que
    Afficher("les 1 Millard de lapin seront atteints au bout de ",nbre_mois," mois")
FIN_ALGORITHME


EXERCICE24:
Algorithme Jeu_Dévinette
VAR ValDuJou1, DevDuJou2, Tentative : entiers

DEBUT_ALGORITHME
    Afficher("joueur1,saisi une valeur que le joueur2 va déviner: ")
	Lire(ValDuJou1)
	ValDuJou1 <-- 0 
	Tentative <-- 0 
	Pour Tentative allant de 1 à 5 faire
	    Tant_que (ValDuJou1 != DevDuJou2) faire
	        Si (ValDuJou1 < DevDuJou2) alors
		        Afficher("valeur dévinée trop grand!")
		        Lire(DevDuJou2)
		    Sinon Si (ValDuJou1 > DevDuJou2) alors
                     Afficher("valeur dévinée trop petit!")
				     Lire(DevDuJou2)
                  FinSi	
            FinSi	
	    FinTant_que	
		Tentative <-- Tentative + 1
	FinPour	
    Afficher("Félicitation!! Vous avez déviné. ", ValDuJou1)		
FIN_ALGORITHME

EXERCICE25:
Parti1:
#include <stdio.h>
#include <stdlib.h>
void main(int argc, char *argv[])
{
    for (int i = 1; i <= 10; i++){
        int j = 1;
        while ( j <= i){
            printf("%d ",i);
            j++;
        }
        printf("\n");
    }
}
Parti2:
#include <stdio.h>
#include <stdlib.h>
void main(int argc, char *argv[])
{
    int nombre, nbrediviseur = 0;
    printf("Entrez un nombre entier \n");
    scanf("%d", &nombre);
    if (nombre == 0 || nombre == 1){
        printf("Le nombre %d n'est pas un nombre premier",nombre);
    }
    else{
        	for (int i = 1; i <= nombre; i++){
          		if (nombre%i == 0){
                	      nbrediviseur = nbrediviseur+1;
            	}
        	}
        	if (nbrediviseur > 2){
                 printf("Le nombre %d n'est pas un nombre premier ",nombre);
        	}
        	else { printf("Le nombre %d est un nombre premier ",nombre); }
    }
}

EXERCICE26:
ALGORITHME Test_Ordre
VAR val, nbr_val, i, TabCroissant, TabDécroissant: eniters
         tab : tableau
 
DEBUT_ALGORITHME
  AFFICHER "Donner le nombre de valeur de la suite"
  LIRE nombreValeur
  tableauCroissant <--------- 1
  tableauDecroissant <--------- 1
  POUR i ALLANT_DE 0 A nombreValeur-1
    DEBUT_POUR
    AFFICHER "Donner un nombre"
    LIRE valeurs
    tableauValeurs[i] <--------- valeurs
    FIN_POUR
  POUR i ALLANT_DE 0 A nombreValeur-1
    DEBUT_POUR
    SI (tableauValeurs[i] > tableauValeurs[i+1]) ALORS
      DEBUT_SI
      	tableauCroissant <--------- 0
      FIN_SI
    SI (tableauValeurs[i] < tableauValeurs[i+1]) ALORS
      DEBUT_SI
      	tableauDecroissant <--------- 0
      FIN_SI
    FIN_POUR
  SI (tableauCroissant == 1) ALORS
    DEBUT_SI
    	AFFICHER "Le tableau est croissant"
    FIN_SI
   SINON
     DEBUT_SINON
      SI (tableauDecroissant == 1) ALORS
        DEBUT_SI
        	AFFICHER "Le tableau est décroissant"
        FIN_SI
     SINON
          DEBUT_SINON
          	     AFFICHER "Le tableau est quelconque"
          FIN_SINON
      FIN_SINON
FIN_ALGORITHME

 